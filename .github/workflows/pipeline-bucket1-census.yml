# This workflow will build a new container running the census dataset
# The datasets included in this bucket are, census

name: Data Pipeline Bucket 1 - Census
on:
  push:
    branches:
        - CIT-168
  #workflow_dispatch:
env: 
  BUCKET_COMMAND: bucket_1
  AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
jobs:
  run-test:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@master

      - name: "Generate env file"
        run: |
            echo 'POSTGRES_DB = ${{ secrets.POSTGRES_DB_TEST }}' >> .env 
            echo 'POSTGRES_DJANGO_USER = ${{ secrets.POSTGRES_DJANGO_USER_TEST }}' >> .env 
            echo 'POSTGRES_DJANGO_PASSWORD = ${{ secrets.POSTGRES_DJANGO_PASSWORD_TEST }}' >> .env 
            echo 'POSTGRES_HOST = ${{ secrets.POSTGRES_HOST_TEST }}' >> .env
            echo 'ROUTE_PLANNER_API_KEY = ${{ secrets.ROUTE_PLANNER_API_KEY }}' >> .env 
            echo 'BUCKET_COMMAND = ${{ env.BUCKET_COMMAND }}' >> .env

      #- name: Start containers
      #  run: docker-compose -f cit-api/docker-compose.yml up --build cit-api-pipeline

      #- name: Send mail
      #  if: always()
      #  uses: dawidd6/action-send-mail@v2
      #  with:
      #    # mail server settings
      #    server_address: ${{ secrets.EMAIL_AUTH_HOST_PROD }}
      #    server_port: 8888
      #    # user credentials
      #    username: ${{ secrets.EMAIL_CLIENT_ID_PROD }}
      #    password: ${{ secrets.EMAIL_CLIENT_SECRET_PROD }}
      #    # email subject
      #    subject: ${{ github.job }} job of ${{ github.repository }} has had ${{ job.status }}
      #    # email body as text
      #    body: ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has had ${{ job.status }}
      #    # comma-separated string, send email to
      #    to: jessica.stratton@nttdata.com
      #    # from email name
      #    from: Github Action
  #run-prod:
  #  runs-on: ubuntu-latest
  #  steps:
  #    # checkout the repo
  #    - name: "Checkout GitHub Action"
  #      uses: actions/checkout@master
#
  #    - name: "Generate env file"
  #      run: |
  #          echo 'POSTGRES_DB = ${{ secrets.POSTGRES_DB_PROD }}' >> .env 
  #          echo 'POSTGRES_DJANGO_USER = ${{ secrets.POSTGRES_DJANGO_USER_PROD }}' >> .env 
  #          echo 'POSTGRES_DJANGO_PASSWORD = ${{ secrets.POSTGRES_DJANGO_PASSWORD_PROD }}' >> .env 
  #          echo 'POSTGRES_HOST = ${{ secrets.POSTGRES_HOST_PROD }}' >> .env 
  #          echo 'BUCKET_COMMAND = ${{ env.BUCKET_COMMAND }}' >> .env
#
  #    - name: Start containers
  #      run: docker-compose -f cit-api/docker-compose.yml up --build cit-api-pipeline