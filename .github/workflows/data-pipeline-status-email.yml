# This workflow will be triggered by any of the data pipeline workflows that run. It will send an email with the outcome of the workflow that triggered it. 

name: Data Pipeline Status Emails
on:
  workflow_run:
    workflows: [Manual pipeline run, Data Pipeline Bucket 1 - Census, Data Pipeline - Bucket 2 semiannually, Data Pipeline - Bucket 2 Weekly, Data Pipeline Bucket 3 - Communities, Data Pipeline - Bucket 4 monthly, Data Pipeline - Bucket 4 semiannually, Data Pipeline - Bucket 5 monthly, Data Pipeline - Bucket 5 semiannually Test, Data Pipeline - Bucket 5 semiannually Prod, Data Pipeline Bucket 6 - BC Assessment, Data Pipeline Bucket 7]
    types: [completed]
env: 
  WORKFLOW_NAME: ${{ github.event.workflow_run.name }}
  WORKFLOW_STATUS: ${{ github.event.workflow_run.conclusion }}
  WORKFLOW_URL: ${{ github.event.workflow_run.html_url }}
jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ env.WORKFLOW_STATUS == 'success' }}
    steps:
      - run: echo 'The triggering workflow passed'

      - name: "Generate env file"
        run: |
            echo 'ROUTE_PLANNER_API_KEY = ${{ secrets.ROUTE_PLANNER_API_KEY }}' >> .env 
            echo 'BUCKET_COMMAND = ${{ env.BUCKET_COMMAND }}' >> .env
            echo 'EMAIL_NOTIFICATIONS_ENABLED = ${{ secrets.EMAIL_NOTIFICATIONS_ENABLED }}' >> .env
            echo 'EMAIL_AUTH_HOST = ${{ secrets.EMAIL_AUTH_HOST_PROD }}' >> .env
            echo 'EMAIL_SERVICE_HOST = ${{ secrets.EMAIL_SERVICE_HOST_PROD }}' >> .env
            echo 'EMAIL_CLIENT_ID = ${{ secrets.EMAIL_CLIENT_ID_PROD }}' >> .env
            echo 'EMAIL_CLIENT_SECRET = ${{ secrets.EMAIL_CLIENT_SECRET_PROD }}' >> .env
            echo 'EMAIL_SENDING_ADDRESS = ${{ secrets.EMAIL_SENDING_ADDRESS_PROD }}' >> .env
            echo 'EMAIL_OPPORTUNITY_LINK_HOST = ${{ secrets.EMAIL_OPPORTUNITY_LINK_HOST_PROD }}' >> .env
            echo 'USER_TRACKING_TO_EMAIL = ${{ secrets.CIT_PIPELINE_STATUS_USER }}' >> .env
            echo 'EMAIL_TYPE = send-pipeline-status-email' >> .env
            echo 'WORKFLOW_STATUS = ${{ env.WORKFLOW_STATUS }}' >> .env
            echo 'WORKFLOW_NAME = ${{ env.WORKFLOW_NAME }}' >> .env
            echo 'WORKFLOW_URL = ${{ env.WORKFLOW_URL }}' >> .env

      - name: Send email success
        run: docker-compose -f cit-api/docker-compose.yml up --build cit-email

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ env.WORKFLOW_STATUS == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'

      - name: "Generate env file"
        run: |
            echo 'ROUTE_PLANNER_API_KEY = ${{ secrets.ROUTE_PLANNER_API_KEY }}' >> .env 
            echo 'BUCKET_COMMAND = ${{ env.BUCKET_COMMAND }}' >> .env
            echo 'EMAIL_NOTIFICATIONS_ENABLED = ${{ secrets.EMAIL_NOTIFICATIONS_ENABLED }}' >> .env
            echo 'EMAIL_AUTH_HOST = ${{ secrets.EMAIL_AUTH_HOST_PROD }}' >> .env
            echo 'EMAIL_SERVICE_HOST = ${{ secrets.EMAIL_SERVICE_HOST_PROD }}' >> .env
            echo 'EMAIL_CLIENT_ID = ${{ secrets.EMAIL_CLIENT_ID_PROD }}' >> .env
            echo 'EMAIL_CLIENT_SECRET = ${{ secrets.EMAIL_CLIENT_SECRET_PROD }}' >> .env
            echo 'EMAIL_SENDING_ADDRESS = ${{ secrets.EMAIL_SENDING_ADDRESS_PROD }}' >> .env
            echo 'EMAIL_OPPORTUNITY_LINK_HOST = ${{ secrets.EMAIL_OPPORTUNITY_LINK_HOST_PROD }}' >> .env
            echo 'USER_TRACKING_TO_EMAIL = ${{ secrets.CIT_PIPELINE_STATUS_USER }}' >> .env
            echo 'EMAIL_TYPE = send-pipeline-status-email' >> .env
            echo 'WORKFLOW_STATUS = ${{ env.WORKFLOW_STATUS }}' >> .env
            echo 'WORKFLOW_NAME = ${{ env.WORKFLOW_NAME }}' >> .env
            echo 'WORKFLOW_URL = ${{ env.WORKFLOW_URL }}' >> .env

      - name: Send email failure
        run: docker-compose -f cit-api/docker-compose.yml up --build cit-email