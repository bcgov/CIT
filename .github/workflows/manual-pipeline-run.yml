# This workflow will ask for input from the user, running the chosen bucket of datasets in the chosen environment

name: Manual pipeline run
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        required: true
        options:
        - test
        - test-reusable
        - prod
      buckets:
        type: choice
        description: Select the bucket
        required: true
        options:
        - bucket_1_census_divisions
        - bucket_1_census_subdivisions_2016
        - bucket_1_census_subdivisions
        - bucket_2_businesses_by_csd
        - bucket_2_core_housing_need
        - bucket_2_housing
        - bucket_2_municipalities
        - bucket_2_nbd_phh_speeds
        - bucket_2_phdeomographic
        - bucket_2_regional_districts
        - bucket_2_school_districts
        - bucket_2_tourism_region
        - bucket_2_tsunami_zones
        - bucket_2_wildfire_zones
        - bucket_2_connectivity_projects
        - bucket_2_naics_codes
        - bucket_3
        - bucket_4_monthly
        - bucket_4_semiannually
        - bucket_5_monthly
        - bucket_5_airports
        - bucket_5_civic_facilities
        - bucket_5_clinics
        - bucket_5_customs_port_of_entry
        - bucket_5_diagnostic_facilities
        - bucket_5_emergency_social_service_facilities
        - bucket_5_hospitals
        - bucket_5_laboratory_services
        - bucket_5_local_govt_offices
        - bucket_5_pharmacies
        - bucket_5_port_and_terminal
        - bucket_5_public_library
        - bucket_5_schools
        - bucket_5_servicebc_locations
        - bucket_5_timber_facilities
        - bucket_7
        - bucket_7_bc_wildfire_zones
        - bucket_7_bc_network_connectivity
env: 
  BUCKET_COMMAND: ${{ github.event.inputs.buckets }}
jobs:
  run-test-wip: 
    if: ${{ github.event.inputs.environment == 'test-reusable' }}
    uses: bcgov/CIT/.github/workflows/run_pipeline_command.yml@develop
    with:
      BUCKET_COMMAND: ${{ inputs.buckets }}
      environment: test
  run-test:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'test' }}
    
    steps:
      # checkout the repo
      - name: "Checkout GitHub Actionthe relap"
        uses: actions/checkout@master
      
      - name: Environment check
        run: | 
          echo "environment is ${{ github.event.inputs.environment }}"

      - name: "Generate env file"
        run: |
            echo 'POSTGRES_DB = ${{ secrets.POSTGRES_DB_TEST }}' >> .env 
            echo 'POSTGRES_DJANGO_USER = ${{ secrets.POSTGRES_DJANGO_USER_TEST }}' >> .env 
            echo 'POSTGRES_DJANGO_PASSWORD = ${{ secrets.POSTGRES_DJANGO_PASSWORD_TEST }}' >> .env 
            echo 'POSTGRES_HOST = ${{ secrets.POSTGRES_HOST_TEST }}' >> .env
            echo 'ROUTE_PLANNER_API_KEY = ${{ secrets.ROUTE_PLANNER_API_KEY }}' >> .env 
            echo 'BUCKET_COMMAND = ${{ env.BUCKET_COMMAND }}' >> .env

      - name: Start containers
        run: docker-compose -f cit-api/docker-compose.yml up --build cit-api-pipeline
  run-prod:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'prod' }}
    steps:
      # checkout the repo
      - name: "Checkout GitHub Actionthe relap"
        uses: actions/checkout@master
      
      - name: Environment check
        run: | 
          echo "environment is ${{ github.event.inputs.environment }}"

      - name: "Generate env file"
        run: |
            echo 'POSTGRES_DB = ${{ secrets.POSTGRES_DB_PROD }}' >> .env 
            echo 'POSTGRES_DJANGO_USER = ${{ secrets.POSTGRES_DJANGO_USER_PROD }}' >> .env 
            echo 'POSTGRES_DJANGO_PASSWORD = ${{ secrets.POSTGRES_DJANGO_PASSWORD_PROD }}' >> .env 
            echo 'POSTGRES_HOST = ${{ secrets.POSTGRES_HOST_PROD }}' >> .env
            echo 'ROUTE_PLANNER_API_KEY = ${{ secrets.ROUTE_PLANNER_API_KEY }}' >> .env
            echo 'BUCKET_COMMAND = ${{ env.BUCKET_COMMAND }}' >> .env

      - name: Start containers
        run: docker-compose -f cit-api/docker-compose.yml up --build cit-api-pipeline