# Generated by Django 2.2.16 on 2021-03-09 00:05

from django.db import migrations, models
import django.db.models.deletion

def populate_statuses(apps, schema_editor):
    LandUseZoning = apps.get_model("pipeline", "LandUseZoning")
    zonings = [
        ["Commercial", "", "COMM"],
        ["Residential", "", "RESD"],
        ["Industrial (Light)", "", "INDL"],
        ["Industrail (Heavy)", "", "INDH"],
        ["Agriculture", "", "ARGI"]
    ]
    # Add new zone
    for zoningInfo in zonings:
        zoning = LandUseZoning()
        zoning.name = zoningInfo[0]
        zoning.description = zoningInfo[1]
        zoning.code = zoningInfo[2]
        zoning.save()

    PreferredDevelopment = apps.get_model("pipeline", "PreferredDevelopment")
    preferred_development = [
        ["Manufacturing", "", "MANU"],
        ["Transportation and Warehousing", "", "TRAN"],
        ["Residential", "", "RESD"],
        ["Agriculture", "", "ARGI"]
    ]
    # Add new developments
    for developmentInfo in preferred_development:
        development = PreferredDevelopment()
        development.name = developmentInfo[0]
        development.description = developmentInfo[1]
        development.code = developmentInfo[2]
        development.save()

    PropertyStatus = apps.get_model("pipeline", "PropertyStatus")
    property_status = [
        ["Sale", "", "SALE"],
        ["Lease", "", "LEAS"],
        ["Both", "", "BOTH"]
    ]
    # Add new property statuses
    for statusInfo in property_status:
        status = PropertyStatus()
        status.name = statusInfo[0]
        status.description = statusInfo[1]
        status.code = statusInfo[2]
        status.save()

def unpopulate_statuses(apps, schema_editor):
    LandUseZoning = apps.get_model("pipeline", "LandUseZoning")
    PreferredDevelopment = apps.get_model("pipeline", "PreferredDevelopment")
    PropertyStatus = apps.get_model("pipeline", "PropertyStatus")
    LandUseZoning.objects.all().delete()
    PreferredDevelopment.objects.all().delete()
    PropertyStatus.objects.all().delete()



class Migration(migrations.Migration):

    dependencies = [
        ('pipeline', '0123_auto_20210303_2236'),
    ]

    operations = [
        migrations.CreateModel(
            name='LandUseZoning',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, null=True)),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='PreferredDevelopment',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, null=True)),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='PropertyStatus',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=255, null=True)),
            ],
            options={
                'ordering': ('pk',),
            },
        ),
        migrations.RunPython(populate_statuses, unpopulate_statuses),
        migrations.AddField(
            model_name='opportunity',
            name='land_use_zoning',
            field=models.ForeignKey(db_column='land_use_zoning', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current', to='pipeline.LandUseZoning'),
        ),
        migrations.AddField(
            model_name='opportunity',
            name='ocp_zoning_code',
            field=models.ForeignKey(db_column='ocp_zoning_code', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='future', to='pipeline.LandUseZoning'),
        ),
        migrations.AddField(
            model_name='opportunity',
            name='opportunity_preferred_development',
            field=models.ManyToManyField(db_column='opportunity_preferred_development', null=True, to='pipeline.PreferredDevelopment'),
        ),
        migrations.AddField(
            model_name='opportunity',
            name='opportunity_property_status',
            field=models.ForeignKey(db_column='opportunity_property_status', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pipeline.PropertyStatus'),
        ),
        migrations.AddField(
            model_name='opportunity',
            name='deleted',
            field=models.BooleanField(default=False, help_text='This is for soft deletes'),
        ),
    ]
